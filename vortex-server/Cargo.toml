[package]
name = "vortex-server"
version = "0.1.0"
edition = "2021"

[dependencies]
vortex-core = { path = "../vortex-core" }

tokio = { workspace = true }
axum = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
log = { workspace = true } # Keep log facade dep even if using tracing directly
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
thiserror = { workspace = true }
tower-http = { workspace = true }
hyper = { workspace = true }
ndarray = { version = "0.15", features = ["serde"] } # Added ndarray
# wal = "1.0" # Removed, as we are building our own WAL module
serde_cbor = "0.11"
rocksdb = { version = "0.22.0", features = ["snappy", "lz4"] }

# Dependencies for custom WAL implementation (inspired by Qdrant's WAL)
byteorder = "1.5"
crc32c = "0.6.8"
# log = "0.4" # Already in workspace
memmap2 = "0.9.5" # Specify version directly, same as vortex-core
rand = { workspace = true } # This is fine as rand is in workspace.dependencies
fs4 = "0.12.0"
rustix = { version = "0.38", features = [ "fs", "time" ] } # Needed for ftruncate and other fs ops, Qdrant uses 0.36, latest is ~0.38
crossbeam-channel = "0.5"
futures = "0.3" # For futures::executor::block_on

# gRPC dependencies
tonic = "0.11"
prost = "0.12"
prost-types = "0.12" # For google.protobuf.Struct and other well-known types

[build-dependencies]
tonic-build = { version = "0.11", features = ["prost"] }

[dev-dependencies]
tempfile = "3.10.1" # For tests
env_logger = "0.11.3" # For test logging
tokio-stream = { version = "0.1", features = ["net"] } # For TcpListenerStream
